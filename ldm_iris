# loading
import torch
from omegaconf import OmegaConf

from .ldm.util import instantiate_from_config

def load_model_from_config(config, ckpt):
    print(f"Loading model from {ckpt}")
    pl_sd = torch.load(ckpt)#, map_location="cpu")
    sd = pl_sd["state_dict"]
    model = instantiate_from_config(config.model)
    m, u = model.load_state_dict(sd, strict=False)
    model.cuda()
    model.eval()
    return model


def get_model():
    config = OmegaConf.load("./src/models/tokenizer/latent_diffusion/configs/latent-diffusion/lsun_bedrooms-ldm-vq-4.yaml")  
    model = load_model_from_config(config, "./src/models/tokenizer/latent_diffusion/models/ldm/lsun_bedrooms-ldm-vq-4/model.ckpt")
    return model